Index.PACKAGES = {"com.github.ehiggs" : [], "com.github.ehiggs.spark" : [], "com.github.ehiggs.spark.terasort" : [{"name" : "com.github.ehiggs.spark.terasort.TeraGen", "shortDescription" : "", "object" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html", "members_object" : [{"label" : "generateRecord", "tail" : "(recBuf: Array[Byte], rand: Unsigned16, recordNumber: Unsigned16): Unit", "member" : "com.github.ehiggs.spark.terasort.TeraGen.generateRecord", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html#generateRecord(recBuf:Array[Byte],rand:com.github.ehiggs.spark.terasort.Unsigned16,recordNumber:com.github.ehiggs.spark.terasort.Unsigned16):Unit", "kind" : "def"}, {"label" : "sizeToSizeStr", "tail" : "(size: Long): String", "member" : "com.github.ehiggs.spark.terasort.TeraGen.sizeToSizeStr", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html#sizeToSizeStr(size:Long):String", "kind" : "def"}, {"label" : "sizeStrToBytes", "tail" : "(str: String): Long", "member" : "com.github.ehiggs.spark.terasort.TeraGen.sizeStrToBytes", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html#sizeStrToBytes(str:String):Long", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "com.github.ehiggs.spark.terasort.TeraGen.main", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraGen$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.ehiggs.spark.terasort.TeraInputFormat", "shortDescription" : "", "object" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html", "members_class" : [{"label" : "TeraRecordReader", "tail" : "", "member" : "com.github.ehiggs.spark.terasort.TeraInputFormat.TeraRecordReader", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#TeraRecordReaderextendsRecordReader[Array[Byte],Array[Byte]]", "kind" : "class"}, {"label" : "listStatus", "tail" : "(job: JobContext): List[FileStatus]", "member" : "com.github.ehiggs.spark.terasort.TeraInputFormat.listStatus", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#listStatus(job:org.apache.hadoop.mapreduce.JobContext):java.util.List[org.apache.hadoop.fs.FileStatus]", "kind" : "def"}, {"label" : "createRecordReader", "tail" : "(split: InputSplit, context: TaskAttemptContext): RecordReader[Array[Byte], Array[Byte]]", "member" : "com.github.ehiggs.spark.terasort.TeraInputFormat.createRecordReader", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#createRecordReader(split:org.apache.hadoop.mapreduce.InputSplit,context:org.apache.hadoop.mapreduce.TaskAttemptContext):org.apache.hadoop.mapreduce.RecordReader[Array[Byte],Array[Byte]]", "kind" : "def"}, {"member" : "com.github.ehiggs.spark.terasort.TeraInputFormat#<init>", "error" : "unsupported entity"}, {"label" : "getBlockIndex", "tail" : "(arg0: Array[BlockLocation], arg1: Long): Int", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getBlockIndex", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#getBlockIndex(x$1:Array[org.apache.hadoop.fs.BlockLocation],x$2:Long):Int", "kind" : "def"}, {"label" : "computeSplitSize", "tail" : "(arg0: Long, arg1: Long, arg2: Long): Long", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.computeSplitSize", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#computeSplitSize(x$1:Long,x$2:Long,x$3:Long):Long", "kind" : "def"}, {"label" : "getSplits", "tail" : "(arg0: JobContext): List[InputSplit]", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getSplits", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#getSplits(x$1:org.apache.hadoop.mapreduce.JobContext):java.util.List[org.apache.hadoop.mapreduce.InputSplit]", "kind" : "def"}, {"label" : "makeSplit", "tail" : "(arg0: Path, arg1: Long, arg2: Long, arg3: Array[String], arg4: Array[String]): FileSplit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.makeSplit", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#makeSplit(x$1:org.apache.hadoop.fs.Path,x$2:Long,x$3:Long,x$4:Array[String],x$5:Array[String]):org.apache.hadoop.mapreduce.lib.input.FileSplit", "kind" : "def"}, {"label" : "makeSplit", "tail" : "(arg0: Path, arg1: Long, arg2: Long, arg3: Array[String]): FileSplit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.makeSplit", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#makeSplit(x$1:org.apache.hadoop.fs.Path,x$2:Long,x$3:Long,x$4:Array[String]):org.apache.hadoop.mapreduce.lib.input.FileSplit", "kind" : "def"}, {"label" : "addInputPathRecursively", "tail" : "(arg0: List[FileStatus], arg1: FileSystem, arg2: Path, arg3: PathFilter): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPathRecursively", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#addInputPathRecursively(x$1:java.util.List[org.apache.hadoop.fs.FileStatus],x$2:org.apache.hadoop.fs.FileSystem,x$3:org.apache.hadoop.fs.Path,x$4:org.apache.hadoop.fs.PathFilter):Unit", "kind" : "def"}, {"label" : "isSplitable", "tail" : "(arg0: JobContext, arg1: Path): Boolean", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.isSplitable", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#isSplitable(x$1:org.apache.hadoop.mapreduce.JobContext,x$2:org.apache.hadoop.fs.Path):Boolean", "kind" : "def"}, {"label" : "getFormatMinSplitSize", "tail" : "(): Long", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getFormatMinSplitSize", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#getFormatMinSplitSize():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "caseInsensitiveOrdering", "tail" : ": Comparator[Array[Byte]]", "member" : "com.github.ehiggs.spark.terasort.TeraInputFormat.caseInsensitiveOrdering", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#caseInsensitiveOrdering:java.util.Comparator[Array[Byte]]", "kind" : "implicit val"}, {"label" : "lastResult", "tail" : ": List[InputSplit]", "member" : "com.github.ehiggs.spark.terasort.TeraInputFormat.lastResult", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#lastResult:java.util.List[org.apache.hadoop.mapreduce.InputSplit]", "kind" : "var"}, {"label" : "lastContext", "tail" : ": JobContext", "member" : "com.github.ehiggs.spark.terasort.TeraInputFormat.lastContext", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#lastContext:org.apache.hadoop.mapreduce.JobContext", "kind" : "var"}, {"label" : "RECORD_LEN", "tail" : ": Int", "member" : "com.github.ehiggs.spark.terasort.TeraInputFormat.RECORD_LEN", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#RECORD_LEN:Int", "kind" : "val"}, {"label" : "VALUE_LEN", "tail" : ": Int", "member" : "com.github.ehiggs.spark.terasort.TeraInputFormat.VALUE_LEN", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#VALUE_LEN:Int", "kind" : "val"}, {"label" : "KEY_LEN", "tail" : ": Int", "member" : "com.github.ehiggs.spark.terasort.TeraInputFormat.KEY_LEN", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#KEY_LEN:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/ehiggs\/spark\/terasort\/TeraInputFormat.html", "kind" : "object"}, {"name" : "com.github.ehiggs.spark.terasort.TeraOutputFormat", "shortDescription" : "An output format that writes the key and value appended together.", "object" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat$.html", "members_class" : [{"label" : "getOutputCommitter", "tail" : "(context: TaskAttemptContext): OutputCommitter", "member" : "com.github.ehiggs.spark.terasort.TeraOutputFormat.getOutputCommitter", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#getOutputCommitter(context:org.apache.hadoop.mapreduce.TaskAttemptContext):org.apache.hadoop.mapreduce.OutputCommitter", "kind" : "def"}, {"label" : "getRecordWriter", "tail" : "(job: TaskAttemptContext): RecordWriter[Array[Byte], Array[Byte]]", "member" : "com.github.ehiggs.spark.terasort.TeraOutputFormat.getRecordWriter", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#getRecordWriter(job:org.apache.hadoop.mapreduce.TaskAttemptContext):org.apache.hadoop.mapreduce.RecordWriter[Array[Byte],Array[Byte]]", "kind" : "def"}, {"label" : "getOutputPath", "tail" : "(job: JobContext): Path", "member" : "com.github.ehiggs.spark.terasort.TeraOutputFormat.getOutputPath", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#getOutputPath(job:org.apache.hadoop.mapreduce.JobContext):org.apache.hadoop.fs.Path", "kind" : "def"}, {"label" : "checkOutputSpecs", "tail" : "(job: JobContext): Unit", "member" : "com.github.ehiggs.spark.terasort.TeraOutputFormat.checkOutputSpecs", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#checkOutputSpecs(job:org.apache.hadoop.mapreduce.JobContext):Unit", "kind" : "def"}, {"label" : "TeraRecordWriter", "tail" : "", "member" : "com.github.ehiggs.spark.terasort.TeraOutputFormat.TeraRecordWriter", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#TeraRecordWriterextendsRecordWriter[Array[Byte],Array[Byte]]", "kind" : "class"}, {"label" : "getFinalSync", "tail" : "(job: JobContext): Boolean", "member" : "com.github.ehiggs.spark.terasort.TeraOutputFormat.getFinalSync", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#getFinalSync(job:org.apache.hadoop.mapreduce.JobContext):Boolean", "kind" : "def"}, {"label" : "setFinalSync", "tail" : "(job: JobContext, newValue: Boolean): Unit", "member" : "com.github.ehiggs.spark.terasort.TeraOutputFormat.setFinalSync", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#setFinalSync(job:org.apache.hadoop.mapreduce.JobContext,newValue:Boolean):Unit", "kind" : "def"}, {"label" : "committer", "tail" : ": OutputCommitter", "member" : "com.github.ehiggs.spark.terasort.TeraOutputFormat.committer", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#committer:org.apache.hadoop.mapreduce.OutputCommitter", "kind" : "var"}, {"member" : "com.github.ehiggs.spark.terasort.TeraOutputFormat#<init>", "error" : "unsupported entity"}, {"label" : "getDefaultWorkFile", "tail" : "(arg0: TaskAttemptContext, arg1: String): Path", "member" : "org.apache.hadoop.mapreduce.lib.output.FileOutputFormat.getDefaultWorkFile", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#getDefaultWorkFile(x$1:org.apache.hadoop.mapreduce.TaskAttemptContext,x$2:String):org.apache.hadoop.fs.Path", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "OUTDIR", "tail" : ": String", "member" : "com.github.ehiggs.spark.terasort.TeraOutputFormat.OUTDIR", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat$.html#OUTDIR:String", "kind" : "val"}, {"label" : "FINAL_SYNC_ATTRIBUTE", "tail" : ": String", "member" : "com.github.ehiggs.spark.terasort.TeraOutputFormat.FINAL_SYNC_ATTRIBUTE", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat$.html#FINAL_SYNC_ATTRIBUTE:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/ehiggs\/spark\/terasort\/TeraOutputFormat.html", "kind" : "object"}, {"name" : "com.github.ehiggs.spark.terasort.TeraSort", "shortDescription" : "This is a great example program to stress test Spark's shuffle mechanism.", "object" : "com\/github\/ehiggs\/spark\/terasort\/TeraSort$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "com.github.ehiggs.spark.terasort.TeraSort.main", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSort$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "caseInsensitiveOrdering", "tail" : ": Comparator[Array[Byte]]", "member" : "com.github.ehiggs.spark.terasort.TeraSort.caseInsensitiveOrdering", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSort$.html#caseInsensitiveOrdering:java.util.Comparator[Array[Byte]]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSort$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSort$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSort$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSort$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSort$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSort$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSort$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSort$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSort$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSort$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSort$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSort$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSort$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSort$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSort$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSort$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSort$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSort$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSort$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.ehiggs.spark.terasort.TeraSortPartitioner", "shortDescription" : "Partitioner for terasort.", "object" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner$.html", "members_object" : [{"label" : "max", "tail" : ": Long", "member" : "com.github.ehiggs.spark.terasort.TeraSortPartitioner.max", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner$.html#max:Long", "kind" : "val"}, {"label" : "min", "tail" : ": Long", "member" : "com.github.ehiggs.spark.terasort.TeraSortPartitioner.min", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner$.html#min:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "getPartition", "tail" : "(key: Any): Int", "member" : "com.github.ehiggs.spark.terasort.TeraSortPartitioner.getPartition", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner.html#getPartition(key:Any):Int", "kind" : "def"}, {"label" : "rangePerPart", "tail" : ": Long", "member" : "com.github.ehiggs.spark.terasort.TeraSortPartitioner.rangePerPart", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner.html#rangePerPart:Long", "kind" : "val"}, {"member" : "com.github.ehiggs.spark.terasort.TeraSortPartitioner#<init>", "error" : "unsupported entity"}, {"label" : "numPartitions", "tail" : ": Int", "member" : "com.github.ehiggs.spark.terasort.TeraSortPartitioner.numPartitions", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner.html#numPartitions:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortPartitioner.html", "kind" : "case class"}, {"name" : "com.github.ehiggs.spark.terasort.TeraSortXPN", "shortDescription" : "This is a great example program to stress test Spark's shuffle mechanism.", "object" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortXPN$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "com.github.ehiggs.spark.terasort.TeraSortXPN.main", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortXPN$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "caseInsensitiveOrdering", "tail" : ": Comparator[Array[Byte]]", "member" : "com.github.ehiggs.spark.terasort.TeraSortXPN.caseInsensitiveOrdering", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortXPN$.html#caseInsensitiveOrdering:java.util.Comparator[Array[Byte]]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortXPN$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortXPN$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortXPN$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortXPN$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortXPN$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortXPN$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortXPN$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortXPN$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortXPN$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortXPN$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortXPN$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortXPN$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortXPN$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortXPN$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortXPN$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortXPN$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortXPN$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortXPN$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraSortXPN$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.ehiggs.spark.terasort.TeraValidate", "shortDescription" : "An application that reads sorted data according to the terasort spec andreports if it's indeed sorted.", "object" : "com\/github\/ehiggs\/spark\/terasort\/TeraValidate$.html", "members_object" : [{"label" : "validate", "tail" : "(sc: SparkContext, dataset: RDD[(Array[Byte], Array[Byte])]): Unit", "member" : "com.github.ehiggs.spark.terasort.TeraValidate.validate", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraValidate$.html#validate(sc:org.apache.spark.SparkContext,dataset:org.apache.spark.rdd.RDD[(Array[Byte],Array[Byte])]):Unit", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "com.github.ehiggs.spark.terasort.TeraValidate.main", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraValidate$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraValidate$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraValidate$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraValidate$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraValidate$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraValidate$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraValidate$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraValidate$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraValidate$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraValidate$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraValidate$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraValidate$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraValidate$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraValidate$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraValidate$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraValidate$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraValidate$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraValidate$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraValidate$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ehiggs\/spark\/terasort\/TeraValidate$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com" : [], "com.github" : []};